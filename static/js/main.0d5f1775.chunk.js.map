{"version":3,"sources":["serviceWorker.js","components/InitPage/NavBar/NavBar.js","components/InitPage/Banner/Banner.js","components/InitPage/MidSection/MidSection.js","components/InitPage/MidCard/MidCard.js","components/InitPage/InitPage.js","components/Login/styles.js","components/Login/Login.js","components/ChatList/styles.js","components/ChatList/ChatList.js","components/SignOut/styles.js","components/SignOut/SignOut.js","components/ChatView/styles.js","components/ToolBar/styles.js","components/ToolBar/ToolBar.js","components/ChatView/ChatView.js","components/ChatTextBox/styles.js","components/ChatTextBox/ChatTextBox.js","components/NewChat/styles.js","components/NewChat/NewChat.js","components/Dashboard/Dashboard.js","components/SignUp/styles.js","components/SignUp/SignUp.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","NavBar","className","to","type","datatoggle","datatarget","ariacontrols","ariaexpanded","arialabel","id","Banner","MidSection","this","props","children","React","Component","MidCard","style","textAlign","title","height","overflowY","InitPage","pathname","styles","theme","main","width","display","marginLeft","spacing","marginRight","breakpoints","up","paper","marginTop","down","form","submit","hasAccountHeader","logInLink","textDecoration","color","fontWeight","errorText","Login","userTyping","e","setState","email","target","value","password","submitLogIn","preventDefault","firebase","auth","signInWithEmailAndPassword","state","then","authRes","history","push","err","msg","message","loginErr","console","log","classes","CssBaseline","Paper","Typography","component","variant","onSubmit","FormControl","required","fullWidth","margin","InputLabel","htmlFor","Input","autoComplete","autoFocus","onChange","Button","withStyles","root","backgroundColor","palette","background","position","left","boxShadow","listItem","cursor","newChatBtn","borderRadius","unreadMessage","top","right","ChatList","newChat","newChatBtnFn","selectChat","index","selectChatFn","userIsSender","chat","messages","length","sender","userEmail","chats","onClick","List","map","key","ListItem","selected","selectedChatIndex","alignItems","ListItemAvatar","Avatar","alt","users","filter","user","split","ListItemText","primary","secondary","substring","recieverHasRead","ListItemIcon","Divider","signOutBtn","bottom","signOut","content","overflow","padding","boxSizing","friendSent","float","clear","wordWrap","userSent","chatHeader","fontSize","paddingTop","usr","ChatView","container","document","getElementById","scrollTo","scrollHeight","undefined","sendBtn","chatTextBoxContainer","chatTextBox","ChatTextBox","keyCode","submitMessage","chatText","messageValid","text","replace","userClickedInput","messageReadFn","submitMessageFn","TextField","placeholder","onKeyUp","onFocus","input","NewChat","username","submitNewChat","a","userExists","chatExists","goToChat","createChat","newChatSubmitFn","sendTo","goToChatFn","buildDocKey","currentUser","sort","join","docKey","firestore","collection","doc","get","exists","usersSnapshot","docs","data","includes","serverError","Dashboard","selectedChat","update","FieldValue","arrayUnion","timestamp","Date","now","friend","chatIndex","messageRead","recieverClickedMessage","newChatBtnClicked","newChatFormVisible","usersInChat","find","every","indexOf","newChatSubmit","chatObj","set","onAuthStateChanged","where","onSnapshot","res","SignUp","formIsValid","passwordConfirmation","submitSignUp","createUserWithEmailAndPassword","userObj","dbErr","signupErr","authErr","signupError","routing","path","App","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.0d5f1775.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst NavBar = () => {\n  return (\n    <nav className=\"navbar sticky-top navbar-expand-sm navbar-dark bg-primary\">\n      <div className=\"container-fluid\">\n        <Link className=\"navbar-brand\" to=\"/\">\n          HelloChat\n        </Link>\n        <button\n          className=\"navbar-toggler d-lg-none\"\n          type=\"button\"\n          datatoggle=\"collapse\"\n          datatarget=\"#collapsibleNavId\"\n          ariacontrols=\"collapsibleNavId\"\n          ariaexpanded=\"false\"\n          arialabel=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"collapsibleNavId\">\n          <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\n            <li className=\"nav-item\">\n              <Link className=\"nav-link\" to=\"/\">\n                Home\n              </Link>\n            </li>\n            <li className=\"nav-item dropdown\">\n              <Link className=\"nav-link\" to=\"/\">\n                About Us\n              </Link>\n            </li>\n          </ul>\n          <ul className=\"nav navbar-nav navbar-right\">\n            <li>\n              <Link className=\"nav-link\" to=\"/\">\n                Contact Us\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Banner = () => {\n  return (\n    <section className=\"jumbotron\">\n      <div className=\"row\">\n        <div className=\"col-md-3 sideLImg\"></div>\n        <div className=\"col-md-6\">\n          <h1 className=\"display-3\">Welcome to HelloChat</h1>\n          <p className=\"lead\">Chat With Your Friends</p>\n          <hr className=\"my-2\" />\n          <br />\n          <p className=\"lead\">\n            <Link\n              className=\"btn btn-primary btn-lg ml-2 rounded-lg\"\n              to=\"/Login\"\n            >\n              Sign In\n            </Link>\n            <Link\n              className=\"btn btn-primary btn-lg ml-2 rounded-lg\"\n              to=\"/SignUp\"\n            >\n              Sign Up\n            </Link>\n          </p>\n        </div>\n        <div className=\"col-md-3 sideRImg\"></div>\n      </div>\n    </section>\n  );\n};\n\nexport default Banner;\n","import React from \"react\";\n\nclass MidSection extends React.Component {\n  render() {\n    return (\n      <section className=\"sec2\">\n        <div className=\"container\">\n          <h3 className=\"text-center font-weight-bold\">\n            Made to transfer stuff locally.\n          </h3>\n          <div className=\"text-center\">\n            Now send files from one hostel to another without any internet\n            connection.\n          </div>\n          <div className=\"row\">\n            {this.props.children}\n            {/* <div className=\"col-md-3\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <h3 className=\"card-title\">\n                    <i className=\"fas fa-power-off    \"></i> &nbsp; Offline\n                  </h3>\n                  <p className=\"card-text\">\n                    TransferX allows you to transfer the data even when you\n                    are\n                    offline.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                  </p>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-3\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <h3 className=\"card-title\">\n                    <i className=\"fas fa-rocket    \"></i> &nbsp; Fast\n                  </h3>\n                  <p className=\"card-text\">\n                    Data transfer rate is very high as it uses your local\n                    network.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                  </p>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-3\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <h3 className=\"card-title\">\n                    <i className=\"fas fa-user-friends    \"></i> &nbsp; Users\n                  </h3>\n                  <p className=\"card-text\">\n                    Send files to particular user and other users can't even\n                    see without your\n                    permissions.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                  </p>\n                </div>\n              </div>\n            </div> */}\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default MidSection;\n","import React from \"react\";\n\nconst MidCard = props => {\n  return (\n    <div className=\"col-md-3\">\n      <div className=\"card\">\n        <div className=\"card-body\" style={{ textAlign: \"center\" }}>\n          <h3 className=\"card-title\">\n            {/* <i className=\"fas fa-lock\"></i> &nbsp; Secure */}\n            {props.title}\n          </h3>\n          <p\n            className=\"card-text\"\n            style={{ height: \"150px\", overflowY: \"hidden\" }}\n          >\n            {props.children}\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MidCard;\n","import React, { Fragment } from \"react\";\nimport NavBar from \"./NavBar/NavBar\";\nimport Banner from \"./Banner/Banner\";\nimport MidSection from \"./MidSection/MidSection\";\nimport MidCard from \"./MidCard/MidCard\";\nimport EnhancedEncryptionIcon from \"@material-ui/icons/EnhancedEncryption\";\nimport \"./styles.css\";\n\nclass InitPage extends React.Component {\n  render() {\n    const { location } = this.props;\n    if (location.pathname === \"/\")\n      return (\n        <Fragment>\n          <NavBar />\n          <Banner />\n          <MidSection>\n            <MidCard\n              title={[\n                <EnhancedEncryptionIcon></EnhancedEncryptionIcon>,\n                \" Secure\"\n              ]}\n            >\n              You can send message to your friend anytime. You can send message\n              to your friend anytime. You can send message to your friend\n              anytime.\n            </MidCard>\n            <MidCard\n              title={[\n                <EnhancedEncryptionIcon></EnhancedEncryptionIcon>,\n                \" Secure\"\n              ]}\n            >\n              You can send message to your friend anytime. You can send message\n              to your friend anytime. You can send message to your friend\n              anytime.\n            </MidCard>\n            <MidCard\n              title={[\n                <EnhancedEncryptionIcon></EnhancedEncryptionIcon>,\n                \" Secure\"\n              ]}\n            >\n              You can send message to your friend anytime. You can send message\n              to your friend anytime. You can send message to your friend\n              anytime.\n            </MidCard>\n            <MidCard\n              title={[\n                <EnhancedEncryptionIcon></EnhancedEncryptionIcon>,\n                \" Secure\"\n              ]}\n            >\n              You can send message to your friend anytime. You can send message\n              to your friend anytime. You can send message to your friend\n              anytime.\n            </MidCard>\n          </MidSection>\n          <footer>&copy; Vaibhav Verma 2020</footer>\n        </Fragment>\n      );\n    else return <span></span>;\n  }\n}\n\nexport default InitPage;\n","const styles = theme => ({\n  main: {\n    width: \"auto\",\n    display: \"block\", // Fix IE 11 issue.\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n    [theme.breakpoints.up(\"sm\")]: {\n      width: 400,\n      marginLeft: \"auto\",\n      marginRight: \"auto\"\n    }\n  },\n  paper: {\n    marginTop: theme.spacing(30),\n    [theme.breakpoints.down(\"sm\")]: {\n      marginTop: theme.spacing(10)\n    },\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(3)}px`\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing()\n  },\n  submit: {\n    marginTop: theme.spacing(3)\n  },\n  hasAccountHeader: {\n    marginTop: \"10px\",\n    width: \"100%\"\n  },\n  logInLink: {\n    width: \"100%\",\n    textDecoration: \"none\",\n    color: \"#303f9f\",\n    fontWeight: \"bolder\"\n  },\n  errorText: {\n    marginTop: \"10px\",\n    color: \"red\",\n    textAlign: \"center\"\n  }\n});\n\nexport default styles;\n","import React, { Component, Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport Paper from \"@material-ui/core/Paper\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport NavBar from \"../InitPage/NavBar/NavBar\";\nimport styles from \"./styles\";\nimport firebase from \"firebase\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: null,\n      password: null,\n      loginErr: \"\"\n    };\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <Fragment>\n        <NavBar />\n        <main className={classes.main}>\n          <CssBaseline />\n          <Paper className={classes.paper}>\n            <Typography component=\"h1\" variant=\"h5\">\n              Log In!\n            </Typography>\n            <form onSubmit={e => this.submitLogIn(e)} className={classes.form}>\n              <FormControl required fullWidth margin=\"normal\">\n                <InputLabel htmlFor=\"login-email-input\">\n                  Enter Your Email\n                </InputLabel>\n                <Input\n                  autoComplete=\"email\"\n                  autoFocus\n                  onChange={e => this.userTyping(\"email\", e)}\n                  id=\"login-email-input\"\n                />\n              </FormControl>\n              <FormControl required fullWidth margin=\"normal\">\n                <InputLabel htmlFor=\"login-password-input\">\n                  Enter Your Password\n                </InputLabel>\n                <Input\n                  type=\"password\"\n                  onChange={e => this.userTyping(\"password\", e)}\n                  id=\"login-password-input\"\n                />\n              </FormControl>\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n              >\n                Log In\n              </Button>\n            </form>\n            {this.state.loginErr ? (\n              <Typography\n                className={classes.errorText}\n                component=\"h2\"\n                variant=\"caption\"\n              >\n                {this.state.loginErr}\n              </Typography>\n            ) : null}\n            <Typography\n              component=\"h3\"\n              variant=\"subtitle1\"\n              className={classes.hasAccountHeader}\n            >\n              Don't Have An Account?{\" \"}\n            </Typography>\n            <Link className={classes.logInLink} to=\"/SignUp\">\n              SignUp\n            </Link>\n          </Paper>\n        </main>\n      </Fragment>\n    );\n  }\n\n  userTyping = (type, e) => {\n    switch (type) {\n      case \"email\":\n        this.setState({ email: e.target.value });\n        break;\n      case \"password\":\n        this.setState({ password: e.target.value });\n        break;\n      default:\n        break;\n    }\n  };\n\n  submitLogIn = e => {\n    e.preventDefault();\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(this.state.email, this.state.password)\n      .then(\n        authRes => {\n          this.props.history.push(\"/Dashboard\");\n        },\n        err => {\n          const msg =\n            err.message ===\n            \"There is no user record corresponding to this identifier. The user may have been deleted.\"\n              ? \"User Not Found\"\n              : err.message;\n          this.setState({ loginErr: msg });\n          console.log(err);\n        }\n      );\n  };\n}\n\nexport default withStyles(styles)(Login);\n","const styles = theme => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    height: \"calc(100% - 35px)\",\n    position: \"absolute\",\n    left: \"0\",\n    width: \"310px\",\n    boxShadow: \"0px 0px 2px black\"\n  },\n  listItem: {\n    cursor: \"pointer\"\n  },\n  newChatBtn: {\n    borderRadius: \"0px\"\n  },\n  unreadMessage: {\n    color: \"red\",\n    position: \"absolute\",\n    top: \"0\",\n    right: \"5px\"\n  }\n});\n\nexport default styles;\n","import React, { Component, Fragment } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport styles from \"./styles\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Button from \"@material-ui/core/Button\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport NotificationImportant from \"@material-ui/icons/NotificationImportant\";\n\nclass ChatList extends Component {\n  render() {\n    const { classes } = this.props;\n\n    if (this.props.chats.length > 0) {\n      return (\n        <main className={classes.root}>\n          <Button\n            variant=\"contained\"\n            fullWidth\n            color=\"primary\"\n            className={classes.newChatBtn}\n            onClick={this.newChat}\n          >\n            New Message\n          </Button>\n          <List>\n            {this.props.chats.map((chat, index) => {\n              return (\n                <div key={index}>\n                  <ListItem\n                    onClick={() => this.selectChat(index)}\n                    className={classes.listItem}\n                    selected={this.props.selectedChatIndex === index}\n                    alignItems=\"flex-start\"\n                  >\n                    <ListItemAvatar>\n                      <Avatar alt=\"Reny Sharp\">\n                        {\n                          chat.users\n                            .filter(user => user !== this.props.userEmail)[0]\n                            .split(\"\")[0]\n                        }\n                      </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText\n                      primary={\n                        chat.users.filter(\n                          user => user !== this.props.userEmail\n                        )[0]\n                      }\n                      secondary={\n                        <Fragment>\n                          <Typography component=\"span\" color=\"textPrimary\">\n                            {chat.messages[\n                              chat.messages.length - 1\n                            ].message.substring(0, 30)}\n                          </Typography>\n                        </Fragment>\n                      }\n                    ></ListItemText>\n                    {chat.recieverHasRead === false &&\n                    !this.userIsSender(chat) ? (\n                      <ListItemIcon>\n                        <NotificationImportant\n                          className={classes.unreadMessage}\n                        />\n                      </ListItemIcon>\n                    ) : null}\n                  </ListItem>\n                  <Divider></Divider>\n                </div>\n              );\n            })}\n          </List>\n        </main>\n      );\n    } else {\n      return (\n        <main className={classes.root}>\n          <Button\n            variant=\"contained\"\n            fullWidth\n            color=\"primary\"\n            onClick={this.newChat}\n            className={classes.newChatBtn}\n          >\n            New Message\n          </Button>\n          <List></List>\n        </main>\n      );\n    }\n  }\n\n  newChat = () => {\n    this.props.newChatBtnFn();\n  };\n\n  selectChat = index => {\n    this.props.selectChatFn(index);\n  };\n\n  userIsSender = chat =>\n    chat.messages[chat.messages.length - 1].sender === this.props.userEmail;\n}\n\nexport default withStyles(styles)(ChatList);\n","const styles = theme => ({\n  signOutBtn: {\n    position: \"absolute\",\n    bottom: \"0px\",\n    left: \"0px\",\n    width: \"310px\",\n    borderRadius: \"0px\",\n    backgroundColor: \"#227092\",\n    height: \"35px\",\n    boxShadow: \"0px 0px 2px black\",\n    color: \"white\"\n    // [theme.breakpoints.down(\"sm\")]: {\n    //   // display: \"none\"\n    // }\n  }\n});\n\nexport default styles;\n","import React from \"react\";\nimport { Button, withStyles } from \"@material-ui/core\";\nimport styles from \"./styles\";\n\nconst SignOut = ({ signOut, classes }) => {\n  return (\n    <Button\n      variant=\"contained\"\n      fullWidth\n      onClick={signOut}\n      color=\"primary\"\n      className={classes.signOutBtn}\n    >\n      Sign Out\n    </Button>\n  );\n};\n\nexport default withStyles(styles)(SignOut);\n","const styles = theme => ({\n  content: {\n    height: \"calc(100vh - 100px)\",\n    overflow: \"auto\",\n    padding: \"25px\",\n    marginLeft: \"310px\",\n    boxSizing: \"border-box\",\n    overflowY: \"scroll\",\n    top: \"50px\",\n    width: \"calc(100% - 310px)\",\n    position: \"absolute\"\n  },\n\n  friendSent: {\n    float: \"left\",\n    clear: \"both\",\n    padding: \"20px\",\n    boxSizing: \"border-box\",\n    wordWrap: \"break-word\",\n    marginTop: \"10px\",\n    backgroundColor: \"#707BC4\",\n    color: \"white\",\n    width: \"300px\",\n    borderRadius: \"10px\"\n  },\n\n  userSent: {\n    float: \"right\",\n    clear: \"both\",\n    padding: \"20px\",\n    boxSizing: \"border-box\",\n    wordWrap: \"break-word\",\n    marginTop: \"10px\",\n    backgroundColor: \"#999\",\n    color: \"white\",\n    width: \"300px\",\n    borderRadius: \"10px\"\n  }\n});\n\nexport default styles;\n","const styles = theme => ({\n  chatHeader: {\n    width: \"calc(100% - 301px)\",\n    height: \"37.27px\",\n    backgroundColor: \"#344195\",\n    position: \"fixed\",\n    marginLeft: \"311px\",\n    fontSize: \"15px\",\n    textAlign: \"center\",\n    color: \"white\",\n    paddingTop: \"7px\",\n    boxSizing: \"border-box\"\n  }\n});\n\nexport default styles;\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core\";\nimport styles from \"./styles\";\n\nconst ToolBar = ({ classes, user, chat }) => (\n  <div className={classes.chatHeader}>\n    Your conversation with{\" \"}\n    <span style={{ fontWeight: \"800\" }}>\n      {chat.users.filter(usr => usr !== user)[0]}\n    </span>\n  </div>\n);\n\nexport default withStyles(styles)(ToolBar);\n","import React, { Component, Fragment } from \"react\";\nimport { withStyles } from \"@material-ui/core\";\nimport styles from \"./styles\";\nimport ToolBar from \"../ToolBar/ToolBar\";\n\nclass ChatView extends Component {\n  componentDidUpdate() {\n    const container = document.getElementById(\"chatview-container\");\n    if (container) container.scrollTo(0, container.scrollHeight);\n  }\n\n  render() {\n    const { classes, chat, user } = this.props;\n\n    if (chat === undefined) {\n      return (\n        <main\n          id=\"chatview-container\"\n          style={{ textAlign: \"center\", color: \"blue\", fontSize: \"3rem\" }}\n          className={classes.content}\n        >\n          Select A Chat To Display\n        </main>\n      );\n    } else {\n      return (\n        <Fragment>\n          <ToolBar user={user} chat={chat} />\n          <main id=\"chatview-container\" className={classes.content}>\n            {chat.messages.map((msg, index) => {\n              return (\n                <div\n                  className={\n                    msg.sender === user ? classes.userSent : classes.friendSent\n                  }\n                  key={index}\n                >\n                  {msg.message}\n                </div>\n              );\n            })}\n          </main>\n        </Fragment>\n      );\n    }\n  }\n}\n\nexport default withStyles(styles)(ChatView);\n","const styles = theme => ({\n  sendBtn: {\n    color: \"blue\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      color: \"gray\"\n    }\n  },\n\n  chatTextBoxContainer: {\n    position: \"absolute\",\n    bottom: \"15px\",\n    left: \"325px\",\n    boxSizing: \"border-box\",\n    overflow: \"auto\",\n    width: \"calc(100% - 310px - 60px)\"\n  },\n\n  chatTextBox: {\n    width: \"calc(100% - 25px)\"\n  }\n});\n\nexport default styles;\n","import React, { Component } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Send from \"@material-ui/icons/Send\";\nimport styles from \"./styles\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nclass ChatTextBox extends Component {\n  constructor() {\n    super();\n    this.state = {\n      chatText: \"\"\n    };\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.chatTextBoxContainer}>\n        <TextField\n          id=\"chatTextBox\"\n          className={classes.chatTextBox}\n          placeholder=\"Type your message......\"\n          onKeyUp={e => this.userTyping(e)}\n          onFocus={this.userClickedInput}\n        ></TextField>\n        <Send onClick={this.submitMessage} className={classes.sendBtn}></Send>\n      </div>\n    );\n  }\n\n  userTyping = e => {\n    e.keyCode === 13\n      ? this.submitMessage()\n      : this.setState({ chatText: e.target.value });\n  };\n\n  messageValid = text => text && text.replace(/\\s/g, \"\").length;\n\n  userClickedInput = () => {\n    this.props.messageReadFn();\n  };\n\n  submitMessage = () => {\n    if (this.messageValid(this.state.chatText)) {\n      // call parent function\n      this.props.submitMessageFn(this.state.chatText);\n      document.getElementById(\"chatTextBox\").value = \"\";\n    }\n  };\n}\n\nexport default withStyles(styles)(ChatTextBox);\n","const styles = theme => ({\n  main: {\n    width: \"auto\",\n    display: \"block\", // Fix IE 11 issue.\n    marginLeft: theme.spacing() * 3,\n    marginRight: theme.spacing() * 3,\n    [theme.breakpoints.up(400 + theme.spacing() * 3 * 2)]: {\n      width: 400,\n      marginLeft: \"320px\",\n      marginRight: \"auto\"\n    }\n  },\n  paper: {\n    padding: `${theme.spacing() * 2}px ${theme.spacing() *\n      3}px ${theme.spacing() * 3}px`,\n    position: \"absolute\",\n    width: \"350px\",\n    top: \"50px\",\n    left: \"calc(50% + 150px - 175px)\"\n  },\n  input: {},\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing()\n  },\n  submit: {\n    marginTop: theme.spacing() * 3\n  },\n  errorText: {\n    color: \"red\",\n    textAlign: \"center\"\n  }\n});\n\nexport default styles;\n","import React, { Component } from \"react\";\nimport {\n  FormControl,\n  InputLabel,\n  Input,\n  Button,\n  Paper,\n  withStyles,\n  CssBaseline,\n  Typography\n} from \"@material-ui/core\";\nimport styles from \"./styles\";\nimport firebase from \"firebase\";\n\nclass NewChat extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: null,\n      message: null\n    };\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <main className={classes.main}>\n        <CssBaseline></CssBaseline>\n        <Paper className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h5\">\n            Send A Message\n          </Typography>\n          <form className={classes.form} onSubmit={e => this.submitNewChat(e)}>\n            <FormControl fullWidth>\n              <InputLabel htmlFor=\"new-chat-username\">\n                Enter Your Friend's Email\n              </InputLabel>\n              <Input\n                required\n                className={classes.input}\n                autoFocus\n                onChange={e => this.userTyping(\"username\", e)}\n                id=\"new-chat-username\"\n              />\n            </FormControl>\n            <FormControl fullWidth>\n              <InputLabel htmlFor=\"new-chat-message\">\n                Enter Your Message\n              </InputLabel>\n              <Input\n                required\n                className={classes.input}\n                onChange={e => this.userTyping(\"message\", e)}\n                id=\"new-chat-message\"\n              />\n            </FormControl>\n            <Button\n              type=\"submit\"\n              fullWidth\n              className={classes.submit}\n              variant=\"contained\"\n              color=\"primary\"\n            >\n              Submit\n            </Button>\n          </form>\n          {this.state.serverError ? (\n            <Typography\n              component=\"h3\"\n              variant=\"subtitle1\"\n              className={classes.errorText}\n            >\n              Unable to locate the user\n            </Typography>\n          ) : null}\n        </Paper>\n      </main>\n    );\n  }\n\n  componentWillMount() {\n    if (!firebase.auth().currentUser) this.props.history.push(\"/login\");\n  }\n\n  userTyping = (type, e) => {\n    switch (type) {\n      case \"username\":\n        this.setState({ username: e.target.value });\n        break;\n\n      case \"message\":\n        this.setState({ message: e.target.value });\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  submitNewChat = async e => {\n    e.preventDefault();\n    const userExists = await this.userExists();\n    if (userExists) {\n      console.log(this.state);\n      const chatExists = await this.chatExists();\n      chatExists ? this.goToChat() : this.createChat();\n    }\n  };\n\n  createChat = () => {\n    console.log(\"createChat\");\n    this.props.newChatSubmitFn({\n      sendTo: this.state.username,\n      message: this.state.message\n    });\n  };\n\n  goToChat = () =>\n    this.props.goToChatFn(this.buildDocKey(), this.state.message);\n\n  buildDocKey = () => {\n    console.log(\"dockey\");\n    return [firebase.auth().currentUser.email, this.state.username]\n      .sort()\n      .join(\":\");\n  };\n\n  chatExists = async () => {\n    console.log(\"chatexists\");\n    const docKey = this.buildDocKey();\n    const chat = await firebase\n      .firestore()\n      .collection(\"chats\")\n      .doc(docKey)\n      .get();\n    console.log(chat);\n    return chat.exists;\n  };\n\n  userExists = async () => {\n    console.log(\"userExists\");\n    const usersSnapshot = await firebase\n      .firestore()\n      .collection(\"users\")\n      .get();\n    const exists = usersSnapshot.docs\n      .map(doc => doc.data().email)\n      .includes(this.state.username);\n    this.setState({ serverError: !exists });\n    return exists;\n  };\n}\n\nexport default withStyles(styles)(NewChat);\n","import React, { Component, Fragment } from \"react\";\nimport ChatList from \"../ChatList/ChatList\";\nimport SignOut from \"../SignOut/SignOut\";\nimport ChatView from \"../ChatView/ChatView\";\nimport ChatTextBox from \"../ChatTextBox/ChatTextBox\";\nimport NewChat from \"../NewChat/NewChat\";\nimport firebase from \"firebase\";\n\nexport default class Dashboard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      selectedChat: null,\n      newChatFormVisible: false,\n      email: null,\n      chats: []\n    };\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <ChatList\n          history={this.props.history}\n          newChatBtnFn={this.newChatBtnClicked}\n          selectChatFn={this.selectChat}\n          chats={this.state.chats}\n          userEmail={this.state.email}\n          selectedChatIndex={this.state.selectedChat}\n        />\n        {this.state.newChatFormVisible ? null : (\n          <ChatView\n            user={this.state.email}\n            chat={this.state.chats[this.state.selectedChat]}\n          />\n        )}\n        {this.state.selectedChat !== null && !this.state.newChatFormVisible ? (\n          <ChatTextBox\n            messageReadFn={this.messageRead}\n            submitMessageFn={this.submitMessage}\n          />\n        ) : null}\n        {this.state.newChatFormVisible ? (\n          <NewChat\n            goToChatFn={this.goToChat}\n            newChatSubmitFn={this.newChatSubmit}\n          ></NewChat>\n        ) : null}\n        <SignOut signOut={this.signOut} />\n      </Fragment>\n    );\n  }\n\n  submitMessage = msg => {\n    const docKey = this.buildDocKey(\n      this.state.chats[this.state.selectedChat].users.filter(\n        usr => usr !== this.state.email\n      )[0]\n    );\n    firebase\n      .firestore()\n      .collection(\"chats\")\n      .doc(docKey)\n      .update({\n        messages: firebase.firestore.FieldValue.arrayUnion({\n          sender: this.state.email,\n          message: msg,\n          timestamp: Date.now()\n        }),\n        recieverHasRead: false\n      });\n  };\n\n  buildDocKey = friend => [this.state.email, friend].sort().join(\":\");\n\n  signOut = () => {\n    firebase.auth().signOut();\n  };\n\n  selectChat = async chatIndex => {\n    await this.setState({ selectedChat: chatIndex });\n    this.messageRead();\n  };\n\n  messageRead = () => {\n    const docKey = this.buildDocKey(\n      this.state.chats[this.state.selectedChat].users.filter(\n        usr => usr !== this.state.email\n      )[0]\n    );\n    if (this.recieverClickedMessage(this.state.selectedChat)) {\n      firebase\n        .firestore()\n        .collection(\"chats\")\n        .doc(docKey)\n        .update({ recieverHasRead: true });\n    } else {\n      console.log(\"Clicked by the sender\");\n    }\n  };\n\n  recieverClickedMessage = chatIndex =>\n    this.state.chats[chatIndex].messages[\n      this.state.chats[chatIndex].messages.length - 1\n    ].sender !== this.state.email;\n\n  newChatBtnClicked = () =>\n    this.setState({ newChatFormVisible: true, selectedChat: null });\n\n  goToChat = async (docKey, message) => {\n    const usersInChat = docKey.split(\":\");\n    const chat = this.state.chats.find(chat =>\n      usersInChat.every(user => chat.users.includes(user))\n    );\n    this.setState({ newChatFormVisible: false });\n    await this.selectChat(this.state.chats.indexOf(chat));\n    this.submitMessage(message);\n  };\n\n  newChatSubmit = async chatObj => {\n    const docKey = this.buildDocKey(chatObj.sendTo);\n    await firebase\n      .firestore()\n      .collection(\"chats\")\n      .doc(docKey)\n      .set({\n        recieverHasRead: false,\n        users: [this.state.email, chatObj.sendTo],\n        messages: [\n          {\n            message: chatObj.message,\n            sender: this.state.email\n          }\n        ]\n      });\n    this.setState({ newChatFormVisible: false });\n    this.selectChat(this.state.chats.length - 1);\n  };\n\n  componentWillMount() {\n    firebase.auth().onAuthStateChanged(async usr => {\n      if (!usr) this.props.history.push(\"/Login\");\n      else {\n        await firebase\n          .firestore()\n          .collection(\"chats\")\n          .where(\"users\", \"array-contains\", usr.email)\n          .onSnapshot(async res => {\n            const chats = res.docs.map(doc => doc.data());\n            await this.setState({\n              email: usr.email,\n              chats: chats\n            });\n            console.log(this.state);\n          });\n      }\n    });\n  }\n}\n","const styles = theme => ({\n  main: {\n    width: \"auto\",\n    display: \"block\", // Fix IE 11 issue.\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n    [theme.breakpoints.up(\"sm\")]: {\n      width: 400,\n      marginLeft: \"auto\",\n      marginRight: \"auto\"\n    }\n  },\n  paper: {\n    marginTop: theme.spacing(30),\n    [theme.breakpoints.down(\"sm\")]: {\n      marginTop: theme.spacing(10)\n    },\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(3)}px`\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing()\n  },\n  submit: {\n    marginTop: theme.spacing(3)\n  },\n  hasAccountHeader: {\n    marginTop: \"10px\",\n    width: \"100%\"\n  },\n  logInLink: {\n    width: \"100%\",\n    textDecoration: \"none\",\n    color: \"#303f9f\",\n    fontWeight: \"bolder\"\n  },\n  errorText: {\n    marginTop: \"10px\",\n    color: \"red\",\n    textAlign: \"center\"\n  }\n});\n\nexport default styles;\n","import React, { Component, Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport Paper from \"@material-ui/core/Paper\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport NavBar from \"../InitPage/NavBar/NavBar\";\nimport styles from \"./styles\";\nimport firebase from \"firebase\";\n\nclass SignUp extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: null,\n      password: null,\n      passwordConfirmation: null,\n      signupError: \"\"\n    };\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <Fragment>\n        <NavBar />\n        <main className={classes.main}>\n          <CssBaseline />\n          <Paper className={classes.paper}>\n            <Typography component=\"h1\" variant=\"h5\">\n              Sign Up!\n            </Typography>\n            <form onSubmit={e => this.submitSignUp(e)} className={classes.form}>\n              <FormControl required fullWidth margin=\"normal\">\n                <InputLabel htmlFor=\"signup-email-input\">\n                  Enter Your Email\n                </InputLabel>\n                <Input\n                  autoComplete=\"email\"\n                  autoFocus\n                  onChange={e => this.userTyping(\"email\", e)}\n                  id=\"signup-email-input\"\n                />\n              </FormControl>\n              <FormControl required fullWidth margin=\"normal\">\n                <InputLabel htmlFor=\"signup-password-input\">\n                  Create A Password\n                </InputLabel>\n                <Input\n                  type=\"password\"\n                  onChange={e => this.userTyping(\"password\", e)}\n                  id=\"signup-password-input\"\n                />\n              </FormControl>\n              <FormControl required fullWidth margin=\"normal\">\n                <InputLabel htmlFor=\"signup-password-confirmation-input\">\n                  Confirm Your Password\n                </InputLabel>\n                <Input\n                  type=\"password\"\n                  onChange={e => this.userTyping(\"passwordConfirmation\", e)}\n                  id=\"signup-password-confirmation-input\"\n                />\n              </FormControl>\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n              >\n                Submit\n              </Button>\n            </form>\n            {this.state.signupError ? (\n              <Typography\n                className={classes.errorText}\n                component=\"h2\"\n                variant=\"caption\"\n              >\n                {this.state.signupError}\n              </Typography>\n            ) : null}\n            <Typography\n              component=\"h3\"\n              variant=\"subtitle1\"\n              className={classes.hasAccountHeader}\n            >\n              Already Have An Account?{\" \"}\n            </Typography>\n            <Link className={classes.logInLink} to=\"/login\">\n              Login\n            </Link>\n          </Paper>\n        </main>\n      </Fragment>\n    );\n  }\n\n  formIsValid = () => this.state.password === this.state.passwordConfirmation;\n\n  userTyping = (type, e) => {\n    switch (type) {\n      case \"email\":\n        this.setState({ email: e.target.value });\n        break;\n\n      case \"password\":\n        this.setState({ password: e.target.value });\n        break;\n\n      case \"passwordConfirmation\":\n        this.setState({ passwordConfirmation: e.target.value });\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  submitSignUp = e => {\n    e.preventDefault();\n\n    if (!this.formIsValid()) {\n      this.setState({ signupError: \"Passwords do not match!!\" });\n      return;\n    }\n\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(this.state.email, this.state.password)\n      .then(\n        authRes => {\n          const userObj = {\n            email: authRes.user.email\n          };\n          firebase\n            .firestore()\n            .collection(\"users\")\n            .doc(this.state.email)\n            .set(userObj)\n            .then(\n              () => {\n                this.props.history.push(\"/Dashboard\");\n              },\n              dbErr => {\n                console.log(dbErr);\n                this.setState({ signupErr: dbErr.message });\n              }\n            );\n        },\n        authErr => {\n          console.log(authErr);\n          this.setState({ signupError: authErr.message });\n        }\n      );\n  };\n}\n\nexport default withStyles(styles)(SignUp);\n","import React from \"react\";\nimport { Route, BrowserRouter as Router } from \"react-router-dom\";\nimport InitPage from \"./components/InitPage/InitPage\";\nimport Login from \"./components/Login/Login\";\nimport Dashboard from \"./components/Dashboard/Dashboard\";\nimport SignUp from \"./components/SignUp/SignUp\";\n\nconst routing = (\n  <Router>\n    <div id=\"routing-container\">\n      <Route path=\"/\" component={InitPage}></Route>\n      <Route path=\"/Login\" component={Login}></Route>\n      <Route path=\"/Dashboard\" component={Dashboard}></Route>\n      <Route path=\"/SignUp\" component={SignUp}></Route>\n    </div>\n  </Router>\n);\n\nconst App = () => routing;\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport firebase from \"firebase\";\nimport App from \"./App\";\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyBPvY0jGPR0b3phdIUIsZQyum4HUMG5NQU\",\n  authDomain: \"hellochat-5f281.firebaseapp.com\",\n  databaseURL: \"https://hellochat-5f281.firebaseio.com\",\n  projectId: \"hellochat-5f281\",\n  storageBucket: \"hellochat-5f281.appspot.com\",\n  messagingSenderId: \"214513376191\",\n  appId: \"1:214513376191:web:62d2e809ff1e7506749f0a\",\n  measurementId: \"G-Q6H7MSC87S\"\n});\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}